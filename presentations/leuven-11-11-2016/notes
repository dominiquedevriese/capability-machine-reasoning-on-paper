- Give context. high level purpose
- Cap. marked
- Tell more about enter, why is it important
	- Formalisation of a capability machine (not CHERI or M-Machine)
	- Formalisation, Words, captures "marked"
	- heap(a) and decode in ->
	- < to leq + a
	- simplify restrict
	- example program - assume trusted malloc
	- example program - finish lemma
- before LR describe intend?
	- in property of our LR change word to capability
	- change the world presentation
	- have invariants instead of state machines
	- move up heap satisfaction
	- Move up observation relation, remove the framing part
	- gradually introduce the FTLR - first just code, but pcreg can be used to read.
	- Add the missing details of proof sketch
	- change I/O address to assertion flag address
	- change last example to "quiz" using a standard calling convention where continuations are passed as entry pointers
	- enter cap inspired by M-Machine

Jan Tobias:
Weird to introduce semantics without using it later on.

Stalios: